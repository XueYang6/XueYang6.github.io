<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo 教程</title>
    <link href="/2025/02/02/Hexo_tutorial/"/>
    <url>/2025/02/02/Hexo_tutorial/</url>
    
    <content type="html"><![CDATA[<p>本篇博客主要来记录<code>hexo</code>以及其<code>fluid</code>主题的配置教程。</p><h2 id="配置并部署Hexo"><a href="#配置并部署Hexo" class="headerlink" title="配置并部署Hexo"></a>配置并部署Hexo</h2><h3 id="Hexo-简要说明"><a href="#Hexo-简要说明" class="headerlink" title="Hexo 简要说明"></a>Hexo 简要说明</h3><p>Hexo是一个基于<code>Node.js</code>的快速、简洁的静态博客生成器。它通过解析Markdown文件生成静态网页，适用于搭建个人博客、技术文档等。</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li>安装<a href="https://nodejs.org/zh-cn">Node.js</a></li><li>安装<a href="https://git-scm.com/">Git</a></li></ol><h3 id="安装并加载Hexo"><a href="#安装并加载Hexo" class="headerlink" title="安装并加载Hexo"></a>安装并加载Hexo</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-cli -g<br>hexo init <span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd <span class="hljs-keyword">blod</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br><span class="hljs-keyword"></span>hexo serve<br></code></pre></td></tr></table></figure><h3 id="Hexo基础配置"><a href="#Hexo基础配置" class="headerlink" title="Hexo基础配置"></a>Hexo基础配置</h3><p>找到Hexo生成文件的<code>_config.yml</code>文件，在里面可以设置Hexo中的配置，通常你需要修改如下设置: \</p><h4 id="站点设置"><a href="#站点设置" class="headerlink" title="站点设置"></a>站点设置</h4><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-title">title:</span> 站点名<br>author：作者名<br>language：语言(中文设置为`zh-CN`)<br><span class="hljs-title">timezone:</span> 页面时间(中国时间为`Asia/Shanghai`)<br></code></pre></td></tr></table></figure><h4 id="地址设置"><a href="#地址设置" class="headerlink" title="地址设置"></a>地址设置</h4><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs qml"><span class="hljs-built_in">url</span>：<span class="hljs-attribute">https</span>:<span class="hljs-comment">//name.github.io/(若部署在GitHub上)</span><br></code></pre></td></tr></table></figure><h4 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">theme：themes文件中所选的主题名(推荐Fluid和<span class="hljs-keyword">Next</span>，本占使用Fluid主题配置)<br></code></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ol><li><code>hexo server | hexo s</code> 启动本地开发服务器，用于检验</li><li><code>hexo generate | hexo g</code> 将博客原<code>.md</code>文件生成为HTML文件</li><li><code>hexo deploy | hexo d</code> 将生成的静态文件部署到远程服务器上， 请详见<a href="#%E9%83%A8%E7%BD%B2%E6%96%B9%E6%B3%95">部署到GitHub</a></li><li><code>hexo g -d</code> 一次性执行 <code>hexo generate</code> 和 <code>hexo deploy</code> 命令</li><li><code>hexo clean</code> 清除缓存</li><li><code>hexo new [layout] &lt;title&gt;</code> 参数 <code>layout</code> 可选择<code>post</code>或<code>page</code>，其中<code>post</code>在<code>source\_post</code>目录下生成<code>.md</code>文件，<code>page</code>在<code>source</code>目录下生成文件夹，默认为<code>post</code>。</li></ol><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><h4 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h4><p>hexo有三种默认布局：<code>post</code>、<code>page</code>和<code>draft</code>。每个布局创建的文件会被保存到不同的路径。其中新建的帖子将保存在<code>source/_post</code>文件夹内，而<code>page</code>主要用来初始化如<code>tags</code>和<code>categories</code>这些，若你要开启这些功能最好执行如<code>hexo new page tags</code>命令，这些功能才能正常使用。<code>draft</code>一般很少用到，这里不再赘述。</p><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p>Front-matter用于配置写作设置，通常以YAML格式书写:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2025-2</span><span class="hljs-number">-4</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>其中对于不同的主题可以适配的配置将有所不同，可在<a href="#fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE">Fluid主题配置</a>中查看Fluid的格外写作配置 <br>在Hexo中常用的写作配置有</p><table><thead><tr><th align="left">设置</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left">date</td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left">updated</td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left">comments</td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left">tags</td><td align="left">标签（不适用于分页）</td><td align="left">true</td></tr><tr><td align="left">categories</td><td align="left">分类（不适用于分页）</td><td align="left">true</td></tr><tr><td align="left">更多配置<a href="https://hexo.io/zh-cn/docs/front-matter">点击查看</a></td><td align="left"></td><td align="left"></td></tr></tbody></table><h4 id="资源分配"><a href="#资源分配" class="headerlink" title="资源分配"></a>资源分配</h4><p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。 比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。 然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们</p><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><h4 id="简要原理"><a href="#简要原理" class="headerlink" title="简要原理"></a>简要原理</h4><p>在本地撰写完Markdown格式文章后，通过Hexo解析文档，渲染并生成为具有对应主题样式的HTML静态网页，再推送到GitHub上完成博客的发布。</p><h4 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h4><ol><li>创建GitHub仓库，仓库名一定要是<code>用户名.github.io</code>只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名，点击create repository。<img src="/images/Hexo_tutorial_%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="图片"></li><li>修改Hexo主目录下的<code>_config.yml</code>中的<code>deploy设置</code>，将其匹配你的仓库url地址。<img src="/images/Hexo_tutorial_deploy%E4%BF%AE%E6%94%B9.png" alt="图片"></li><li>执行<code>hexo g -d</code>将博客原<code>.md</code>文件生成为HTML文件并部署到远程服务器上</li><li>在该GitHub仓库上进入<code>设置</code>，再点击<code>Pages</code>修改配置，这里要与第二步中对应上。<img src="/images/Hexo_tutorial_%E4%BF%AE%E6%94%B9Pages.png" alt="图片"></li><li>完成第四步后点击该页面上的<code>Visit site</code></li></ol><h2 id="Fluid主题配置"><a href="#Fluid主题配置" class="headerlink" title="Fluid主题配置"></a>Fluid主题配置</h2><h2 id="可能遇见的问题"><a href="#可能遇见的问题" class="headerlink" title="可能遇见的问题"></a>可能遇见的问题</h2><ol><li><code>.md</code>文章名一定要以大写开头，否则部署后可能发生在页面跳转时无法找到该页面。</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h2><p><a href="https://hexo.io/zh-cn/">Hexo官方文档</a> <br><a href="https://fluid-dev.github.io/hexo-fluid-docs/start/">Fluid官方文档</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>网页</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
